(function() {var type_impls = {
"dioxus_html":[],
"dioxus_mobile":[],
"dioxus_native_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsLabel%3C(Views,+R)%3E-for-Sys\" class=\"impl\"><a href=\"#impl-AsLabel%3C(Views,+R)%3E-for-Sys\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Views, R, Sys&gt; AsLabel&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Views, R)</a>&gt; for Sys<div class=\"where\">where\n    Sys: IntoWorkloadSystem&lt;Views, R&gt; + 'static,\n    R: 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.as_label\" class=\"method trait-impl\"><a href=\"#method.as_label\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_label</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Label&gt;</h4></section></div></details>","AsLabel<(Views, R)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B,+C,+D),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B,+C,+D),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B, C, D), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A,)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A,), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B, C, D, E), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B, C, D, E, F), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A,)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A,), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F,+G),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F,+G),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, G, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F, G) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B, C, D, E, F, G), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B,+C,+D),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B,+C,+D),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B, C, D), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B, C, D, E, F), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+Nothing,+Return%3E-for-F\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+Nothing,+Return%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, Return, F&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, Nothing, Return&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data) -&gt; Return,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, _: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), Nothing, Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, G, H, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F, G, H) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B, C, D, E, F, G, H), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H,+I),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H,+I),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, G, H, I, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    I: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F, G, H, I) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B, C, D, E, F, G, H, I), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, G, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F, G) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B, C, D, E, F, G), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B,+C,+D,+E),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B,+C,+D,+E),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B, C, D, E), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H,+I),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H,+I),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, G, H, I, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    I: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F, G, H, I) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B, C, D, E, F, G, H, I), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, G, H, I, J, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    I: IntoBorrow,\n    J: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F, G, H, I, J) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;J as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B, C, D, E, F, G, H, I, J), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, G, H, I, J, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    I: IntoBorrow,\n    J: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F, G, H, I, J) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;J as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B, C, D, E, F, G, H, I, J), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B,+C),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B,+C),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B, C), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, G, H, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F, G, H) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (Data,), (A, B, C, D, E, F, G, H), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-System%3C's,+(),+(A,+B,+C),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-System%3C's,+(),+(A,+B,+C),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, Return, Func&gt; System&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, world: &amp;'s World) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","System<'s, (), (A, B, C), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B,+C,+D,+E,+F,+G,+H,+I),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B,+C,+D,+E,+F,+G,+H,+I),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, I, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    I: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B, C, D, E, F, G, H, I), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B,+C,+D,+E,+F,+G),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B,+C,+D,+E,+F,+G),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B, C, D, E, F, G), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B,+C),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B,+C),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B, C), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B,+C,+D,+E,+F,+G,+H),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B,+C,+D,+E,+F,+G,+H),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B, C, D, E, F, G, H), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, I, J, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    I: IntoBorrow + BorrowInfo,\n    J: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;J as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B, C, D, E, F, G, H, I, J), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B,+C,+D,+E),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B,+C,+D,+E),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B, C, D, E), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B,+C,+D),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B,+C,+D),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B, C, D), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,+B,+C,+D,+E,+F),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,+B,+C,+D,+E,+F),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A, B, C, D, E, F), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SystemModificator%3C(A,),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-SystemModificator%3C(A,),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, R, Func&gt; SystemModificator&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A,)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if\" class=\"method trait-impl\"><a href=\"#method.run_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Only run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if\" class=\"method trait-impl\"><a href=\"#method.skip_if\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if</a>&lt;RunB, Run&gt;(self, run_if: Run) -&gt; WorkloadSystem<div class=\"where\">where\n    Run: IntoRunIf&lt;RunB&gt;,</div></h4></section></summary><div class='docblock'>Do not run the system if the function evaluates to <code>true</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all\" class=\"method trait-impl\"><a href=\"#method.before_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed before all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.after_all\" class=\"method trait-impl\"><a href=\"#method.after_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">after_all</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will be placed after all invocation of the other system or workload.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.display_name\" class=\"method trait-impl\"><a href=\"#method.display_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">display_name</a>&lt;T&gt;(self, name: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>System name used in error and gui built for shipyard.<br />\nDefaults to the system function name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag\" class=\"method trait-impl\"><a href=\"#method.tag\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tag</a>&lt;T&gt;(self, tag: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>Adds a tag to this system. Tags can be used to control system ordering when running workloads.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_in_workload\" class=\"method trait-impl\"><a href=\"#method.require_in_workload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_in_workload</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_before\" class=\"method trait-impl\"><a href=\"#method.require_before\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_before</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present before itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_after\" class=\"method trait-impl\"><a href=\"#method.require_after\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">require_after</a>&lt;T&gt;(self, other: impl AsLabel&lt;T&gt;) -&gt; WorkloadSystem</h4></section></summary><div class='docblock'>When building a workload, this system will assert that at least one of the other system is present after itself in the workload. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.run_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.run_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Only run the system if the storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Component,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> storage is empty. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_missing_unique\" class=\"method trait-impl\"><a href=\"#method.skip_if_missing_unique\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_missing_unique</a>&lt;T&gt;(self) -&gt; WorkloadSystem<div class=\"where\">where\n    T: Unique,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the <code>T</code> unique storage is not present in the <code>World</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_if_storage_empty_by_id\" class=\"method trait-impl\"><a href=\"#method.skip_if_storage_empty_by_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip_if_storage_empty_by_id</a>(self, storage_id: StorageId) -&gt; WorkloadSystem<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Do not run the system if the storage is empty. <a>Read more</a></div></details></div></details>","SystemModificator<(A,), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B, C, D, E), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F,+G,+H,+I),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F,+G,+H,+I),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, I, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    I: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B, C, D, E, F, G, H, I), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F,+G),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F,+G),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B, C, D, E, F, G), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B, C, D, E, F), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B,+C,+D),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B,+C,+D),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B, C, D), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F,+G,+H),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F,+G,+H),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B, C, D, E, F, G, H), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A,)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A,), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B,+C),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B,+C),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B, C), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadSystem%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, I, J, R, Func&gt; IntoWorkloadSystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    I: IntoBorrow + BorrowInfo,\n    J: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;J as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_system</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;</h4></section></summary><div class='docblock'>Wraps a function in a struct containing all information required by a workload.</div></details></div></details>","IntoWorkloadSystem<(A, B, C, D, E, F, G, H, I, J), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A,)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A,), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F,+G,+H),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F,+G,+H),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B, C, D, E, F, G, H), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B, C, D, E), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B,+C),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B,+C),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B, C), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F,+G),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F,+G),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B, C, D, E, F, G), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B, C, D), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, I, J, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    I: IntoBorrow + BorrowInfo,\n    J: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I, J) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;J as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B, C, D, E, F, G, H, I, J), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F,+G,+H,+I),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F,+G,+H,+I),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, G, H, I, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    G: IntoBorrow + BorrowInfo,\n    H: IntoBorrow + BorrowInfo,\n    I: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F, G, H, I) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B, C, D, E, F, G, H, I), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F),+R%3E-for-Func\" class=\"impl\"><a href=\"#impl-IntoWorkloadTrySystem%3C(A,+B,+C,+D,+E,+F),+R%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C, D, E, F, R, Func&gt; IntoWorkloadTrySystem&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>, R&gt; for Func<div class=\"where\">where\n    A: IntoBorrow + BorrowInfo,\n    B: IntoBorrow + BorrowInfo,\n    C: IntoBorrow + BorrowInfo,\n    D: IntoBorrow + BorrowInfo,\n    E: IntoBorrow + BorrowInfo,\n    F: IntoBorrow + BorrowInfo,\n    R: 'static,\n    Func: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;'b Func</a>: for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(A, B, C, D, E, F) -&gt; R + for&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'a&gt;&gt;::View),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_workload_try_system\" class=\"method trait-impl\"><a href=\"#method.into_workload_try_system\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_workload_try_system</a>&lt;Ok, Err&gt;(\n    self\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;WorkloadSystem, InvalidSystem&gt;<div class=\"where\">where\n    Err: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt;&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ok, Err&gt;&gt;,</div></h4></section></summary><div class='docblock'>Wraps a fallible function in a struct containing all information required by a workload.<br />\nThe workload will stop if an error is returned.</div></details></div></details>","IntoWorkloadTrySystem<(A, B, C, D, E, F), R>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B,+C),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B,+C),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B, C), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B, C, D), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A,)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A,), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H,+I),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H,+I),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, G, H, I, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    I: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F, G, H, I) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;G as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;H as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;I as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B, C, D, E, F, G, H, I), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H,+I),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H,+I),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, G, H, I, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    I: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F, G, H, I) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;G as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;H as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;I as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B, C, D, E, F, G, H, I), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+Nothing,+Return%3E-for-F\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+Nothing,+Return%3E-for-F\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, Return, F&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, Nothing, Return&gt; for F<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data) -&gt; Return,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, _: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), Nothing, Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, G, H, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F, G, H) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;G as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;H as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B, C, D, E, F, G, H), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B, C, D, E), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B,+C),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B,+C),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B, C), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F,+G),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F,+G),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, G, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F, G) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;G as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B, C, D, E, F, G), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B, C, D, E, F), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, E, F, G, H, I, J, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    I: IntoBorrow,\n    J: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D, E, F, G, H, I, J) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;J as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;G as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;H as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;I as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;J as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B, C, D, E, F, G, H, I, J), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, G, H, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F, G, H) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;G as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;H as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B, C, D, E, F, G, H), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B, C, D, E), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G,+H,+I,+J),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, G, H, I, J, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    H: IntoBorrow,\n    I: IntoBorrow,\n    J: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F, G, H, I, J) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;H as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;I as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;J as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;G as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;H as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;I as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;J as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B, C, D, E, F, G, H, I, J), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B,+C,+D),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B,+C,+D),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, C, D, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B, C, D) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B, C, D), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,+B),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,+B),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, B, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A, B) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A, B), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(),+(A,),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(),+(A,),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, A, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A,)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(A) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(self, _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, all_storages: &amp;'s AllStorages) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (), (A,), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B, C, D, E, F), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G),+Return%3E-for-Func\" class=\"impl\"><a href=\"#impl-AllSystem%3C's,+(Data,),+(A,+B,+C,+D,+E,+F,+G),+Return%3E-for-Func\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'s, Data, A, B, C, D, E, F, G, Return, Func&gt; AllSystem&lt;'s, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>, Return&gt; for Func<div class=\"where\">where\n    A: IntoBorrow,\n    B: IntoBorrow,\n    C: IntoBorrow,\n    D: IntoBorrow,\n    E: IntoBorrow,\n    F: IntoBorrow,\n    G: IntoBorrow,\n    Func: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, A, B, C, D, E, F, G) -&gt; Return + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Data, &lt;&lt;A as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;B as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;C as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;D as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;E as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;F as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View, &lt;&lt;G as IntoBorrow&gt;::Borrow as Borrow&lt;'s&gt;&gt;::View),\n    &lt;A as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;B as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;C as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;D as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;E as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;F as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,\n    &lt;G as IntoBorrow&gt;::Borrow: AllStoragesBorrow&lt;'s&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.run\" class=\"method trait-impl\"><a href=\"#method.run\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run</a>(\n    self,\n    _: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(Data,)</a>,\n    all_storages: &amp;'s AllStorages\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Return, GetStorage&gt;</h4></section></div></details>","AllSystem<'s, (Data,), (A, B, C, D, E, F, G), Return>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#73\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#70\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#75\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#71\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#76\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#72\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#79\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#80\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#74\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#69\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#77\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/itertools/0.8/src/itertools/unziptuple.rs.html#78\">source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/itertools/0.8/itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","dioxus_native_core::tree::TreeMutView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Dependancy-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/dioxus_native_core/passes.rs.html#371\">source</a><a href=\"#impl-Dependancy-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + Component, B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + Component&gt; <a class=\"trait\" href=\"dioxus_native_core/prelude/trait.Dependancy.html\" title=\"trait dioxus_native_core::prelude::Dependancy\">Dependancy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.tuple.html\">(A, B)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ElementBorrowed\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ElementBorrowed\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"dioxus_native_core/prelude/trait.Dependancy.html#associatedtype.ElementBorrowed\" class=\"associatedtype\">ElementBorrowed</a>&lt;'a&gt; = (<a class=\"struct\" href=\"dioxus_native_core/prelude/struct.DependancyView.html\" title=\"struct dioxus_native_core::prelude::DependancyView\">DependancyView</a>&lt;'a, A&gt;, <a class=\"struct\" href=\"dioxus_native_core/prelude/struct.DependancyView.html\" title=\"struct dioxus_native_core::prelude::DependancyView\">DependancyView</a>&lt;'a, B&gt;)</h4></section></summary><div class='docblock'>A tuple with all the elements of the dependancy as <a href=\"dioxus_native_core/prelude/struct.DependancyView.html\" title=\"struct dioxus_native_core::prelude::DependancyView\"><code>DependancyView</code></a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ids\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dioxus_native_core/passes.rs.html#371\">source</a><a href=\"#method.type_ids\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dioxus_native_core/prelude/trait.Dependancy.html#method.type_ids\" class=\"fn\">type_ids</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\">TypeId</a>]&gt;</h4></section></summary><div class='docblock'>Returns a list of all the <a href=\"https://doc.rust-lang.org/1.76.0/core/any/struct.TypeId.html\" title=\"struct core::any::TypeId\"><code>TypeId</code></a>s of the elements in the dependancy</div></details></div></details>","Dependancy","dioxus_native_core::tree::TreeMutView"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()